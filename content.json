{"meta":{"title":"Aferica的个人博客","subtitle":null,"description":null,"author":"aferica","url":"http://http://www.aferica.wang","root":"/"},"pages":[],"posts":[{"title":"wepy小程序引入ColorUI","slug":"wepy小程序引入ColorUI","date":"2019-05-09T06:41:57.000Z","updated":"2019-05-09T09:33:03.374Z","comments":true,"path":"post/60c89aa3.html","link":"","permalink":"http://http://www.aferica.wang/post/60c89aa3.html","excerpt":"","text":"好些天没有写博客了，经常感觉自己是一个虎头蛇尾的人，刚接触或者兴致来的时候干劲十足，但是坚持不了多久。搭建这个博客系统就是为了能够给自己一些压力，坚持才是胜利。这次五一算是很长的一盒假期，四天里，我感觉自己过得真的是又颓废又尽兴，每天晚上玩到凌晨四五点，下午三四点才起床，然后又开始玩到凌晨四五点，真的是醉生梦死，太恐怖了！ 前言随着腾讯的大力推广和用户的熟悉，小程序已经应用在很多场景里面，自然而然，也随之衍生出很多开发框架和组件库。这次我写的是使用wepy作为开发框架和使用ColorUI来开发小程序。 开发框架–wepywepy是又腾讯官方出品的，让小程序支持组件化开发的框架。从Github的Star数来说，还是可以说得上是一个最受欢迎的小程序框架。官方文档地址WePY | 小程序组件化开发框架具体怎么使用我就不说了，毕竟文档说的也比较清楚了，我主要说的是我为什么使用wepy，即他的优势： 支持组件化开发（似乎除了原生，其他开发框架都支持） 支持 slot 组件内容分发插槽 支持 Promise，解决回调烦恼 提供的全局拦截器对原生API的请求进行拦截（这一点很赞） UI组件–ColorUIColorUI是一个css组件库，即所有组件都是通过css实现的，这一点很大佬。而且配色丰富，鲜亮，非常好看。另外，ColorUI提供了一些很棒的，让人眼前一亮的组件或者案例，很有参考、学习的价值。官方文档地址鲜亮的高饱和色彩，专注视觉的小程序组件库 结合使用由于ColorUI官方示例只有使用UniApp开发和原生开发的案例，所以我尝试了在wepy中使用。同时我也在issues中回答了这个问题，也可以移步这里wepy中怎么引入呢 引入样式文件引入样式文件和文档介绍没有差别，只需要在app.wpy文件中引入即可123456&lt;style lang=\"less\"&gt;@import \"./colorui/main.wxss\";@import \"./colorui/icon.wxss\";... //自定义样式&lt;/style&gt; 使用自定义导航栏不得不说，ColorUI的自定义导航栏真的让人眼前一亮 修改配置文件app.wpy1234567891011121314151617181920212223242526272829303132333435363738config = &#123; pages: [ 'pages/index' ], window: &#123; backgroundTextStyle: 'light', navigationBarBackgroundColor: '#fff', navigationBarTitleText: 'WeChat', navigationBarTextStyle: 'white', navigationStyle: 'custom' &#125; &#125; // 添加三个全局变量 globalData = &#123; userInfo: null, StatusBar: '', Custom: '', CustomBar: &#123;&#125; &#125; constructor () &#123; super() this.use('requestfix') &#125; onLaunch() &#123; this.testAsync() // 获取设备信息赋值给全局变量 wx.getSystemInfo(&#123; success: e =&gt; &#123; this.globalData.StatusBar = e.statusBarHeight let custom = wx.getMenuButtonBoundingClientRect() this.globalData.Custom = custom this.globalData.CustomBar = custom.bottom + custom.top - e.statusBarHeight &#125; &#125;) &#125; 重写（或者说是复制，因为原生代码几乎不需要改动，复制合并即可）cu-custom组件，因为原生组件中app.globalData获取不到数据 cu-custom.wpy1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&lt;style lang=\"less\"&gt;&lt;/style&gt;&lt;template&gt; &lt;view class=\"cu-custom\" style=\"height: &#123;&#123;CustomBar&#125;&#125;px\"&gt; &lt;view class=\"cu-bar fixed &#123;&#123;bgImage!=''?'none-bg text-white bg-img':''&#125;&#125; &#123;&#123;bgColor&#125;&#125;\" style=\"height:&#123;&#123;CustomBar&#125;&#125;px;padding-top:&#123;&#123;StatusBar&#125;&#125;px;&#123;&#123;bgImage?'background-image:url(' + bgImage+')':''&#125;&#125;\"&gt; &lt;view class=\"action\" bindtap=\"BackPage\" wx:if=\"&#123;&#123;isBack&#125;&#125;\"&gt; &lt;text class=\"cuIcon-back\"&gt;&lt;/text&gt; &lt;slot name=\"backText\"&gt;&lt;/slot&gt; &lt;/view&gt; &lt;view class=\"action border-custom\" wx:if=\"&#123;&#123;isCustom&#125;&#125;\" style=\"width:&#123;&#123;Custom.width&#125;&#125;px;height:&#123;&#123;Custom.height&#125;&#125;px;margin-left:calc(750rpx - &#123;&#123;Custom.right&#125;&#125;px)\"&gt; &lt;text class=\"cuIcon-back\" bindtap=\"BackPage\"&gt;&lt;/text&gt; &lt;text class=\"cuIcon-homefill\" bindtap=\"toHome\"&gt;&lt;/text&gt; &lt;/view&gt; &lt;view class=\"content\" style=\"top:&#123;&#123;StatusBar&#125;&#125;px\"&gt; &lt;slot name=\"content\"&gt;&lt;/slot&gt; &lt;/view&gt; &lt;slot name=\"right\"&gt;&lt;/slot&gt; &lt;/view&gt; &lt;/view&gt;&lt;/template&gt;&lt;script&gt; import wepy from 'wepy' export default class CuCustom extends wepy.component &#123; props = &#123; bgColor: &#123; type: String, default: '' &#125;, isCustom: &#123; type: [Boolean, String], default: false &#125;, isBack: &#123; type: [Boolean, String], default: false &#125;, bgImage: &#123; type: String, default: '' &#125; &#125; // 获取导航栏样式信息 data = &#123; StatusBar: wepy.$instance.globalData.StatusBar, CustomBar: wepy.$instance.globalData.CustomBar, Custom: wepy.$instance.globalData.Custom &#125; methods = &#123; BackPage () &#123; wepy.navigateBack(&#123; delta: 1 &#125;) &#125;, toHome () &#123; wepy.reLaunch(&#123; url: '/pages/index' &#125;) &#125; &#125; onLoad () &#123; &#125; &#125;&lt;/script&gt; 在需要的页面在引入 pages/index.wpy123456789101112131415161718&lt;template&gt; &lt;view&gt; &lt;CuCustom bgColor=\"bg-gradual-blue\"&gt; &lt;view slot=\"content\"&gt;导航栏&lt;/view&gt; &lt;/CuCustom&gt; ... // 页面其他内容 &lt;/view&gt;&lt;/template&gt;&lt;script&gt; import CuCustom from '../components/cu-custom' export default class Index extends wepy.page &#123; components = &#123; CuCustom &#125; &#125;&lt;/script&gt; 存在问题每次使用都需要在页面中引入，不怎么方便","categories":[{"name":"前端","slug":"前端","permalink":"http://http://www.aferica.wang/categories/前端/"},{"name":"小程序","slug":"前端/小程序","permalink":"http://http://www.aferica.wang/categories/前端/小程序/"},{"name":"wepy","slug":"前端/小程序/wepy","permalink":"http://http://www.aferica.wang/categories/前端/小程序/wepy/"}],"tags":[{"name":"wepy","slug":"wepy","permalink":"http://http://www.aferica.wang/tags/wepy/"},{"name":"小程序","slug":"小程序","permalink":"http://http://www.aferica.wang/tags/小程序/"},{"name":"ColorUI","slug":"ColorUI","permalink":"http://http://www.aferica.wang/tags/ColorUI/"}]},{"title":"Vue-cli 3.0使用CDN引入依赖包和按需引入","slug":"Vue使用CDN引入依赖包","date":"2019-04-29T07:00:09.000Z","updated":"2019-04-29T08:50:02.803Z","comments":true,"path":"post/5eb2f156.html","link":"","permalink":"http://http://www.aferica.wang/post/5eb2f156.html","excerpt":"","text":"在Vue开发中过程中，我们会引入许多的依赖包，例如：路由管理vue-router、状态管理vuex和以及一些UI组件库，如Element、iView等，甚至需要添加报表。在开发时我们不会感觉到太大问题，但是当要部署的时候，build结果却提示文件过大如下图（这是一个使用Vue-cli 3.0新建的项目，没有添加任何业务代码，只是引入了Element组件）：可想而知，如果在引入其他组件，打包文件就会越来越大，严重影响首页加载速度 以下操作都是基于Vue-cli 3.0项目 下面，我会一步步优化打包体积： 一、按需加载Element官方提供了安秀加载示例，下面我们按照官方教程实现一遍，查看效果 安装babel-plugin-component依赖包（使用Vue UI创建项目可忽略）123npm install babel-plugin-component -D// oryarn add babel-plugin-component --dev 安装vue-cli-plugin-element依赖包（使用Vue UI创建项目可忽略）123npm install vue-cli-plugin-element -D// oryarn add vue-cli-plugin-element --dev 覆盖babel.config.js文件（使用Vue UI创建项目可忽略）1234567891011121314module.exports = &#123; \"presets\": [ \"@vue/app\" ], \"plugins\": [ [ \"component\", &#123; \"libraryName\": \"element-ui\", \"styleLibraryName\": \"theme-chalk\" &#125; ] ]&#125; 引入相关组件 为了方便日后管理维护，我们新建initEle.js来管理引入组件123456789101112131415161718192021222324252627282930313233343536373839404142import &#123; Row, Col, Card, Button, Input, Loading, MessageBox, Message, Notification, Popover, Menu, Submenu, MenuItem, MenuItemGroup, Header, Main&#125; from 'element-ui'const initEle = Vue =&gt; &#123; Vue.prototype.$loading = Loading.service Vue.prototype.$msgbox = MessageBox Vue.prototype.$alert = MessageBox.alert Vue.prototype.$confirm = MessageBox.confirm Vue.prototype.$prompt = MessageBox.prompt Vue.prototype.$notify = Notification Vue.prototype.$message = Message Vue.use(Row) Vue.use(Col) Vue.use(Card) Vue.use(Button) Vue.use(Input) Vue.use(Popover) Vue.use(Menu) Vue.use(Submenu) Vue.use(MenuItem) Vue.use(MenuItemGroup) Vue.use(Header) Vue.use(Main)&#125;export default initEle 结果打包后发现成效比较显著 问题 按需加载是通过不引入使用的组件来减少提交的，这是就会有一个问题：如果是Element的重度用户，几乎引入了全部组件，那么按需引入的效果就不明显了 即便不是重度用户，如果网站未使用Gzipped的话也显得较大 使用CDN引入依赖包在public/index.html文件中引入cdn123456789101112131415161718&lt;head&gt; &lt;!-- 引入样式 --&gt; &lt;link href=\"https://cdn.bootcss.com/element-ui/2.7.2/theme-chalk/index.css\" rel=\"stylesheet\"&gt;&lt;/head&gt;&lt;body&gt; &lt;noscript&gt; &lt;strong&gt;We're sorry but vue-template doesn't work properly without JavaScript enabled. Please enable it to continue.&lt;/strong&gt; &lt;/noscript&gt; &lt;div id=\"app\"&gt;&lt;/div&gt; &lt;!-- 注意：vue引入开发模式不能使用压缩后的js文件， 即 **.min.js格式， 否则会导致调试工具无法使用 --&gt; &lt;script src=\"https://cdn.bootcss.com/vue/2.6.10/vue.js\"&gt;&lt;/script&gt; &lt;script src=\"//cdn.bootcss.com/vue-router/3.0.2/vue-router.min.js\"&gt;&lt;/script&gt; &lt;script src=\"//cdn.bootcss.com/vuex/3.1.0/vuex.min.js\"&gt;&lt;/script&gt; &lt;script src=\"//cdn.bootcss.com/axios/0.18.0/axios.min.js\"&gt;&lt;/script&gt; &lt;script src=\"//cdn.bootcss.com/element-ui/2.7.2/index.js\"&gt;&lt;/script&gt; &lt;!-- built files will be auto injected --&gt;&lt;/body&gt;... 修改vue.config.js12345678910111213module.exports = &#123; // 添加cdn引用包 configureWebpack: &#123; externals: &#123; 'vue': 'Vue', 'vuex': 'Vuex', 'vue-router': 'VueRouter', 'axios':'axios', 'element-ui': 'ELEMENT' &#125; &#125;, // ...&#125; 覆盖babel.config.js文件12345module.exports = &#123; \"presets\": [ \"@vue/app\" ]&#125; 结果打包后发现成效显著 优点 无需担心引入过多组件依旧导致包体积的问题 使用公共可靠地cdn服务可以加速网站加载 开发环境亦可以使用，配置完成后永绝后患 几乎所有依赖包都可以通过此方式实现 缺点 需要确保cdn服务的稳定和安全 使用cdn引入时，cdn引入的名称有时不一致且不明显，导致引入不成功 开发环境使用cdn通过上述配置，在开发环境也可以使用cdn，不过要注意： 如果需要使用vue devtools来调试，在引入vue的cdn是不能引入*.min.js压缩后的js，否则会导致无法使用调试","categories":[{"name":"前端","slug":"前端","permalink":"http://http://www.aferica.wang/categories/前端/"},{"name":"Vue","slug":"前端/Vue","permalink":"http://http://www.aferica.wang/categories/前端/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://http://www.aferica.wang/tags/Vue/"},{"name":"CDN","slug":"CDN","permalink":"http://http://www.aferica.wang/tags/CDN/"},{"name":"Element","slug":"Element","permalink":"http://http://www.aferica.wang/tags/Element/"},{"name":"Vuex","slug":"Vuex","permalink":"http://http://www.aferica.wang/tags/Vuex/"},{"name":"Vue-cli3.0","slug":"Vue-cli3-0","permalink":"http://http://www.aferica.wang/tags/Vue-cli3-0/"}]},{"title":"mongoDB中聚合aggregate使用","slug":"mongoDB中聚合aggregate使用","date":"2019-04-29T03:42:16.000Z","updated":"2019-04-29T06:59:21.493Z","comments":true,"path":"post/7cc266af.html","link":"","permalink":"http://http://www.aferica.wang/post/7cc266af.html","excerpt":"","text":"Aggregate是MongoDB提供的众多工具中的比较重要的一个，类似于SQL语句中的GROUP BY。聚合工具可以让开发人员直接使用MongoDB原生的命令操作数据库中的数据，并且按照要求进行聚合。 Aggregation管道 管道聚合会将上一个命令输出的数据作为下一个命令的参因此相同条件，不同顺序排列，结果也会不同MongoDB中的管道聚合非常实用，提供高效的数据聚合，并且是MongoDB中数据聚合的首选方法 示例图： 常用操作$project：修改输入文档的结构。可以用来重命名、增加或删除域，也可以用于创建计算结果以及嵌套文档。示例：12345678db.xxx.aggregate( &#123; $project : &#123; // 默认情况下_id字段是被包含的，如果要想不包含_id话可以通过下面方式: _id: 0, title : 1 , author : 1 , &#125;&#125;); $match：用于过滤数据，只输出符合条件的文档。$match使用MongoDB的标准查询操作。示例：12345678910db.xxx.aggregate( &#123; $match : &#123; publish_date: &#123; $lte: 'xxxx', $gt: 'xxxx' &#125; &#125; &#125;); $limit：用来限制MongoDB聚合管道返回的文档数。示例：123db.xxx.aggregate( &#123; $limit : 10&#125;); $skip：在聚合管道中跳过指定数量的文档，并返回余下的文档。示例：123db.xxx.aggregate( &#123; $skip : 20&#125;); $unwind：将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。 该方法主要使用场景，统计数组类型字段中每一个类型数量，如：标签数据、演员数据示例：123db.xxx.aggregate( &#123; $unwind : '$tags'&#125; // tags是字段名 前必须添加$符); $group：将集合中的文档分组，可用于统计结果。统计某个字段数量：123456db.xxx.aggregate( &#123; $group : &#123; _id: '$title', // titile是字段名 前必须添加$符 count: &#123; $sum :1 &#125; // 用作统计 &#125;&#125;); $sort：将输入文档排序后输出。 对统计结果排序 和普通排序命令相同示例：12345db.xxx.aggregate( &#123; $sort : &#123; count: -1 // 按照`$group`分组字段数量降序排序 &#125;&#125; );","categories":[{"name":"数据库","slug":"数据库","permalink":"http://http://www.aferica.wang/categories/数据库/"},{"name":"mongoDB","slug":"数据库/mongoDB","permalink":"http://http://www.aferica.wang/categories/数据库/mongoDB/"}],"tags":[{"name":"mongoDB","slug":"mongoDB","permalink":"http://http://www.aferica.wang/tags/mongoDB/"},{"name":"mongoose","slug":"mongoose","permalink":"http://http://www.aferica.wang/tags/mongoose/"}]},{"title":"搭建自己API服务器（三）：部署到服务器","slug":"搭建自己API服务器（三）：部署到服务器","date":"2019-04-29T01:44:13.000Z","updated":"2019-04-29T02:36:35.722Z","comments":true,"path":"post/65aa62c3.html","link":"","permalink":"http://http://www.aferica.wang/post/65aa62c3.html","excerpt":"","text":"egg是阿里巴巴团队推出的基于Node.js和Koa的为企业级框架和应用详细文档，了解更多 上传代码到服务器可以通过Git、FileZilla等多种方式上传 启动1234npm i // 需要安装依赖才行npm start // 启动生产环境 egg会自动后台管理npm stop // 结束 nginx转发使用http1234567891011server &#123; listen 80; server_name ***.***; location / &#123; proxy_pass http://127.0.0.1:7001/; proxy_connect_timeout 1; proxy_send_timeout 30; proxy_read_timeout 60; &#125;&#125; 使用https12345678910111213141516171819202122server &#123; listen 443; server_name ***.***; // 访问域名 ssl on; ssl_certificate ****.pem; ssl_certificate_key ****.key; // 证书地址 ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; #按照这个套件配置 ssl_prefer_server_ciphers on; client_max_body_size 20m; location / &#123; proxy_pass http://127.0.0.1:7001/; // 端口地址 proxy_connect_timeout 1; proxy_send_timeout 30; proxy_read_timeout 60; &#125;&#125;","categories":[{"name":"后端","slug":"后端","permalink":"http://http://www.aferica.wang/categories/后端/"},{"name":"Node","slug":"后端/Node","permalink":"http://http://www.aferica.wang/categories/后端/Node/"}],"tags":[{"name":"API","slug":"API","permalink":"http://http://www.aferica.wang/tags/API/"},{"name":"服务器","slug":"服务器","permalink":"http://http://www.aferica.wang/tags/服务器/"},{"name":"egg","slug":"egg","permalink":"http://http://www.aferica.wang/tags/egg/"},{"name":"Node","slug":"Node","permalink":"http://http://www.aferica.wang/tags/Node/"}]},{"title":"搭建自己API服务器（二）：添加功能模块","slug":"搭建自己API服务器（二）：添加功能模块","date":"2019-04-29T01:06:42.000Z","updated":"2019-04-29T01:42:14.112Z","comments":true,"path":"post/23e54749.html","link":"","permalink":"http://http://www.aferica.wang/post/23e54749.html","excerpt":"","text":"egg是阿里巴巴团队推出的基于Node.js和Koa的为企业级框架和应用详细文档，了解更多 添加自己的模块（例如添加book模块）开发自己的模块主要需要添加或修改的文件有三个（如果使用mongoose的话则是四个）分别是 添加book相关路由1router.get('/api/book', controller.book.index) 添加app/controller/book.js1234567891011121314151617181920212223242526272829const Controller = require('egg').Controllerclass BookController extends Controller &#123; constructor(ctx) &#123; super(ctx) &#125; // 获取所有类型(分页/模糊) async index() &#123; const &#123; ctx, service &#125; = this // 组装参数 const payload = ctx.query // 调用 Service 进行业务处理 /** * 此处service.book.index意思是调用service文件夹下的book.js中的index方法 * egg无需添加引入语句，会自动引入，但是路径必须正确 * 例如：如果book是在service文件夹下的other文件夹之中 * 引用用具则变为： service.other.book.index */ const res = await service.book.index(payload) // 设置响应内容和响应状态码 ctx.helper.success(&#123;ctx, res&#125;) &#125; // 更多&#125;module.exports = BookController 添加app/service/book.js1234567891011121314151617181920212223242526272829303132333435363738394041424344const Service = require('egg').Serviceclass BookService extends Service &#123; // index======================================================================================================&gt; async index(payload) &#123; let limit = 20 let page = 1 if(payload.limit) &#123; limit = parseInt(payload.limit) delete payload.limit &#125; if(payload.page) &#123; page = parseInt(payload.page) delete payload.page &#125; let res = [] let count = 0 let sort = &#123; last_update: -1 &#125; count = await this.ctx.model.book.count(payload).exec() /** * 此处this.ctx.model.book意思是调用model文件夹下的book.js中的Book数据模型 * egg无需添加引入语句，会自动引入，但是路径必须正确 */ res = await this.ctx.model.book.find(payload).skip((page - 1) * limit).limit(limit).sort(sort).exec() // 数据整理，格式化 let data = res.map((e,i) =&gt; &#123; const jsonObject = Object.assign(&#123;&#125;, e._doc) jsonObject.key = i + 1 + (page - 1) * limit delete jsonObject.page_url delete jsonObject.have_all_info delete jsonObject.create_time return jsonObject &#125;) return &#123; count: count, list: data, limit: limit, page: page &#125; &#125; // 更多&#125;module.exports = BookService 添加app/model/book.js 注意：model文件夹下不能再新建子文件夹，否则会导致model找不到 1234567891011121314151617181920module.exports = app =&gt; &#123; const mongoose = app.mongoose const BookSchema = new mongoose.Schema(&#123; title: &#123; type: String, default: '' &#125;, cover: &#123; type: String, default: '' &#125;, type: &#123; type: String, default: '' &#125;, size: &#123; type: String, default: '' &#125;, short_intro: &#123; type: String, default: ''&#125;, uploader: &#123; type: String, default: ''&#125;, good: &#123; type: Number, default: 0 &#125;, bad: &#123; type: Number, default: 0 &#125;, page_url: &#123; type: String, default: ''&#125;, last_update: &#123; type: String, default: '' &#125;, create_time: &#123; type: String, default: '' &#125; &#125;, &#123;collection: 'book'&#125;) /** * 注意：此处&#123;collection: 'book'&#125;为数据库表名称，如果不自定义表名，会默认为model名称复数形式：books */ return mongoose.model('Book', BookSchema)&#125;","categories":[{"name":"后端","slug":"后端","permalink":"http://http://www.aferica.wang/categories/后端/"},{"name":"Node","slug":"后端/Node","permalink":"http://http://www.aferica.wang/categories/后端/Node/"}],"tags":[{"name":"API","slug":"API","permalink":"http://http://www.aferica.wang/tags/API/"},{"name":"服务器","slug":"服务器","permalink":"http://http://www.aferica.wang/tags/服务器/"},{"name":"egg","slug":"egg","permalink":"http://http://www.aferica.wang/tags/egg/"},{"name":"Node","slug":"Node","permalink":"http://http://www.aferica.wang/tags/Node/"}]},{"title":"搭建自己API服务器（一）：使用egg快速搭建","slug":"搭建自己API服务器（一）：egg入门","date":"2019-04-28T06:52:03.000Z","updated":"2019-04-29T01:21:12.702Z","comments":true,"path":"post/ec07fb1c.html","link":"","permalink":"http://http://www.aferica.wang/post/ec07fb1c.html","excerpt":"","text":"egg是阿里巴巴团队推出的基于Node.js和Koa的为企业级框架和应用详细文档，了解更多 环境要求 操作系统：支持 macOS，Linux，Windows 运行环境：Node建议选择 LTS 版本，最低要求 8.x。 egg项目结构该目录说明来源中egg文档，具体可查目录结构12345678910111213141516171819202122232425262728293031323334353637egg-project├── package.json├── app.js (可选)├── agent.js (可选)├── app| ├── router.js│ ├── controller│ | └── home.js│ ├── service (可选)│ | └── user.js│ ├── middleware (可选)│ | └── response_time.js│ ├── schedule (可选)│ | └── my_task.js│ ├── public (可选)│ | └── reset.css│ ├── view (可选)│ | └── home.tpl│ └── extend (可选)│ ├── helper.js (可选)│ ├── request.js (可选)│ ├── response.js (可选)│ ├── context.js (可选)│ ├── application.js (可选)│ └── agent.js (可选)├── config| ├── plugin.js| ├── config.default.js│ ├── config.prod.js| ├── config.test.js (可选)| ├── config.local.js (可选)| └── config.unittest.js (可选)└── test ├── middleware | └── response_time.test.js └── controller └── home.test.js 如上，由框架约定的目录： app/router.js 用于配置 URL 路由规则，具体参见 Router。 app/controller/** 用于解析用户的输入，处理后返回相应的结果，具体参见 Controller。 app/service/** 用于编写业务逻辑层，可选，建议使用，具体参见 Service。 app/middleware/** 用于编写中间件，可选，具体参见 Middleware。 app/public/** 用于放置静态资源，可选，具体参见内置插件 egg-static。 app/extend/** 用于框架的扩展，可选，具体参见框架扩展。 config/config.{env}.js 用于编写配置文件，具体参见配置。 config/plugin.js 用于配置需要加载的插件，具体参见插件。 test/** 用于单元测试，具体参见单元测试。 app.js 和 agent.js 用于自定义启动时的初始化工作，可选，具体参见启动自定义。由内置插件约定的目录： app/public/** 用于放置静态资源，可选，具体参见内置插件 egg-static。 app/schedule/** 用于定时任务，可选，具体参见定时任务。 若需自定义自己的目录规范，参见 Loader API app/view/** 用于放置模板文件，可选，由模板插件约定，具体参见模板渲染。 app/model/** 用于放置领域模型，可选，由领域类相关插件约定，如 egg-sequelize。 快速搭建API服务框架方法一：使用我自己搭建的demo 该demo是使用egg + mongodb + jsonwebtoken实现的一个简单的RESTful API服务器模板具体说明查看项目介绍 12345git clone https://github.com/aferica/egg-api-severcd egg-api-severyarnnpm run devopen http://localhost:7001/ 方法二：使用官方推荐的egg-RESTfulAPI 框架选择：基于 Egg.js 2.0数据模型：基于 Mongoose 存储授权验证：基于JWT内置功能：文件处理，用户系统，统一错误处理及接口返回标准，全方位CRUD,分页,模糊查询的等数据操作Demo最佳实践：接口设计适配 Ant Design Pro 或 微信小程序开发等。(内置分页及ant接口返回标准) 1234cd app &amp; mkdir public &amp; cd public &amp; mkdir uploadsnpm inpm run devopen http://localhost:7001/ 配置管理egg框架提供了强大且可扩展的配置功能，可以自动合并应用、插件、框架的配置，按顺序覆盖，且可以根据环境维护不同的配置。合并后的配置可直接从 app.config 获取。 多环境配置 多个环境配置文件，适用于多种环境，方便管理维护 1234config|- config.default.js // 默认配置文件|- config.prod.js // 正式环境配置文件|- config.test.js // 测试配置文件 配置示例12345678910111213141516// egg-mongoose配置config.mongoose = &#123; url: 'mongodb://127.0.0.1:27017/egg_x', options: &#123; useMongoClient: true, autoReconnect: true, reconnectTries: Number.MAX_VALUE, bufferMaxEntries: 0, &#125;,&#125;// jwt配置config.jwt = &#123; secret: 'Great4-M', enable: true, // default is false match: '/jwt', // optional&#125;","categories":[{"name":"后端","slug":"后端","permalink":"http://http://www.aferica.wang/categories/后端/"},{"name":"Node","slug":"后端/Node","permalink":"http://http://www.aferica.wang/categories/后端/Node/"}],"tags":[{"name":"API","slug":"API","permalink":"http://http://www.aferica.wang/tags/API/"},{"name":"服务器","slug":"服务器","permalink":"http://http://www.aferica.wang/tags/服务器/"},{"name":"egg","slug":"egg","permalink":"http://http://www.aferica.wang/tags/egg/"},{"name":"Node","slug":"Node","permalink":"http://http://www.aferica.wang/tags/Node/"}]},{"title":"Chrome常用插件推荐","slug":"Chrome常用插件推荐","date":"2019-04-28T06:08:22.000Z","updated":"2019-04-28T06:44:10.476Z","comments":true,"path":"post/7e479bd5.html","link":"","permalink":"http://http://www.aferica.wang/post/7e479bd5.html","excerpt":"","text":"Chrome浏览器是目前使用人数最多的浏览器，由于其优秀的功能，丰富的插件，对开发者友好的特点，几乎是程序开发必备。下面推荐几个个人觉得好用的，甚至是必须的插件。 Restlet Client（API测试工具）提到API测试工具，很多人第一时间想到的应该都是Postman这款工具，但是个人感觉太大了一些，于是我找到了这款工具：从上图可以看出，该工具还是比较受欢迎的 优点 轻量级，就如同网页一般，随用随开，可离线 界面美观，使用方便 免费款极客满足日常所有需要 无广告 功能齐全 二维码生成器 (Quick QR)Chrome上好评率最高的二维码生成器：可以方便地把当前页面转化成二维码，也可以把网页上任何文本或链接，甚至是您输入的任意内容都转化成二维码 功能 快速把任意当前页面生成二维码 把页面上的任何链接生成二维码 您可以输入任何内容生成二维码 无需联网、无需授权（安全可靠，童叟无欺） Proxy SwitchyOmega（科学上网代理）作为一名辛劳的程序员，怎么可以不回科学上网？ 网盘万能钥匙（成功率极高）看到自己想要的资源，但是不知道密码？每次都要复制粘贴，麻烦？这个插件绝对可以解决你的烦恼。 网上商店似乎搜不到了 略尴尬 但是真的好用 Vue DevtoolsVue开发者必备","categories":[{"name":"工具","slug":"工具","permalink":"http://http://www.aferica.wang/categories/工具/"}],"tags":[{"name":"Chrome","slug":"Chrome","permalink":"http://http://www.aferica.wang/tags/Chrome/"},{"name":"工具","slug":"工具","permalink":"http://http://www.aferica.wang/tags/工具/"}]},{"title":"追书神器API整理","slug":"追书神器API整理","date":"2019-04-26T06:29:38.000Z","updated":"2019-04-28T02:53:33.393Z","comments":true,"path":"post/5cb31f79.html","link":"","permalink":"http://http://www.aferica.wang/post/5cb31f79.html","excerpt":"","text":"分类带书籍数量的父分类url: http://api.zhuishushenqi.com/ranking/gender response: 123456789101112131415161718192021222324&#123; \"male\": [ &#123; \"name\": \"玄幻\", \"bookCount\": 429247 &#125;, &#123; \"name\": \"奇幻\", \"bookCount\": 41711 &#125; ], \"female\": [ &#123; \"name\": \"古代言情\", \"bookCount\": 338664 &#125;, &#123; \"name\": \"现代言情\", \"bookCount\": 395887 &#125; ... ] \"press\": []&#125; 带子分类的父分类url: http://api.zhuishushenqi.com/cats/lv2 response: 1234567891011121314151617181920212223&#123; \"male\": [ &#123; \"major\": \"玄幻\", \"mins\": [ \"东方玄幻\", \"异界大陆\", \"异界争霸\", \"远古神话\" ] &#125;, &#123; \"major\": \"奇幻\", \"mins\": [ \"西方奇幻\", \"领主贵族\", \"亡灵异族\", \"魔法校园\" ] &#125; ] ...&#125; 获取分类书籍(categoryInfo)request: 123456789query:&#123; gender: 'male' // 性别 type: 'reputation' // 按照不同的类型获取分类下的书籍(hot, new, reputation, over) major: '玄幻' // 父分类 minor: '东方玄幻' // 子分类 start: 0 // 起始位置 limit: 20 //每页数量&#125; response: 123456789101112&#123; _id: 书籍id title: 书籍名 author: 作者 shortIntro: 简介 cover: 封面 site: 书源 latelyFollower: 追书人数 retentionRatio: 好评率(%) lastChater: 最新章节 tag: 标签&#125; 书籍书籍详情url: http://api.zhuishushenqi.com/book/:id request: 123url params: &#123; id: BookId&#125; response: 12345678910111213141516171819202122232425262728293031&#123; \"_id\": \"5106099abb1c67cf28000016\", //书籍id \"author\": \"禹枫\", //作者 \"cover\": \"/agent/http://images.zhulang.com/book_cover/image/18/98/189843.jpg\", // 封面 \"creater\": \"iPhone 4\", \"longIntro\": \"...\", //长介绍 \"title\": \"异世灵武天下\", //书名 \"cat\": \"东方玄幻\", \"majorCate\": \"玄幻\", //主分类 \"minorCate\": \"东方玄幻\", //子分类 \"_le\": false, \"allowMonthly\": true, \"allowVoucher\": true, \"allowBeanVoucher\": true, \"hasCp\": true, \"postCount\": 3183, \"latelyFollower\": 43192, //追书人数 \"followerCount\": 5164, \"wordCount\": 11241234, //总字数 \"serializeWordCount\": 129762, //平均 \"retentionRatio\": \"66.16\", //好评率 \"updated\": \"2017-01-19T05:58:53.799Z\", //更新于 \"isSerial\": false, //连载中 \"chaptersCount\": 3577, //总章数 \"lastChapter\": \"后续第五章:大结局终章\", //最新章节 \"gender\": [ \"male\" ], \"tags\": [], \"donate\": false&#125; 书籍章节这部分相对比较复杂 步骤如下: 书籍id -&gt; 获取所有书源 -&gt; 书源id -&gt; 获取章节目录 -&gt; 章节link -&gt; 章节内容 书籍id 5779b38d3b433dd647d95da2 获取所有书源 [http://api.zhuishushenqi.com/atoc/?view=summary&amp;book=5779b38d3b433dd647d95da2] response: 123456789101112131415[ &#123; \"_id\": \"5881e82e3e3357fa266f6a3e\", \"source\": \"zhuishuvip\", \"name\": \"优质书源\", \"link\": \"http://vip.zhuishushenqi.com/toc/5881e82e3e3357fa266f6a3e\", \"lastChapter\": \"第1016章 扑朔迷离（大结局）\", \"isCharge\": false, \"chaptersCount\": 1029, \"updated\": \"2017-12-26T05:16:04.709Z\", \"starting\": true, \"host\": \"vip.zhuishushenqi.com\" &#125;, ...] 书源id 5881e82e3e3357fa266f6a3e 获取章节目录 [http://api.zhuishushenqi.com/btoc/5881e82e3e3357fa266f6a3e?view=chapters] response: 123456789101112131415161718&#123; \"_id\": \"5881e82e3e3357fa266f6a3e\", \"name\": \"优质书源\", \"link\": \"http://vip.zhuishushenqi.com/toc/5881e82e3e3357fa266f6a3e\", \"book\": \"5779b38d3b433dd647d95da2\", \"chapters\": [ &#123; \"title\": \"第一章 状元再世\", // 章节名 \"link\": \"http://vip.zhuishushenqi.com/chapter/5881e82e4e307ea47f89deeb?cv=1484908590347\", //章节地址 \"id\": \"5881e82e4e307ea47f89deeb\", //章节id \"currency\": 10, //价格 \"unreadble\": false, \"isVip\": false // 是否是vip章节 &#125; ], \"updated\": \"2017-03-31T14:44:51.413Z\", //更新于 \"host\": \"vip.zhuishushenqi.com\" // 书源&#125; 章节link http://vip.zhuishushenqi.com/chapter/5881e82e4e307ea47f89deeb?cv=1484908590347 章节内容 如下： 章节内容url: http://chapter2.zhuishushenqi.com/chapter/:chapterLink request:123url params: &#123; chapterLink: &apos;http://vip.zhuishushenqi.com/chapter/5881e82e4e307ea47f89df43&apos; // 章节地址&#125; response: 1234567891011&#123; \"ok\": true, \"chapter\": &#123; \"title\": \"第八十九章 杂阿神功（二）\", // 章节名 \"body\": \"\\n\\r\\n\\r\\n\\r请安装最新版追书 以便使用优质资源\", \"isVip\": true, \"cpContent\": \"..\", //章节内容 \"currency\": 10, \"id\": \"5881e82e4e307ea47f89df43\" &#125;&#125; 作者的书籍url: http://api.zhuishushenqi.com/book/accurate-search?author=忘语 request: 123url params: &#123; author: 作者名&#125; response: 12345678910111213141516171819202122&#123; \"books\": [ &#123; \"_id\": \"567d2cb9ee0e56bc713cb2c0\", \"title\": \"玄界之门\", \"author\": \"忘语\", \"shortIntro\": \"...\", \"cover\": \"/cover/148369972991098\", \"cat\": \"仙侠\", \"site\": \"zhuishuvip\", \"majorCate\": \"仙侠\", \"minorCate\": \"幻想修仙\", \"banned\": 0, \"latelyFollower\": 35504, \"followerCount\": 0, \"retentionRatio\": 65.18, \"lastChapter\": \"第919章 前线告急\" &#125;, ... ], \"ok\": true&#125; 排名排名分类url: http://api.zhuishushenqi.com/ranking/gender response: 1234567891011&#123; \"female\": [ &#123; \"_id\": \"54d43437d47d13ff21cad58b\", //周榜 \"title\": \"追书最热榜 Top100\", \"cover\": \"/ranking-cover/142319314350435\", \"collapse\": false, \"monthRank\": \"564d853484665f97662d0810\", //月榜 \"totalRank\": \"564d85b6dd2bd1ec660ea8e2\" // 总榜 &#125; &#125; 排名详情url: http://api.zhuishushenqi.com/ranking/:id request: 123url params: &#123; id: 排名id //周榜等&#125; response: 12345678910111213141516171819202122232425262728293031323334&#123; \"ranking\": &#123; \"_id\": \"54d42d92321052167dfb75e3\", \"updated\": \"2017-03-31T21:20:09.135Z\", \"title\": \"追书最热榜 Top100\", \"tag\": \"zhuishuLatelyFollowerMale\", \"cover\": \"/ranking-cover/142319144267827\", \"icon\": \"/cover/148945782817557\", \"__v\": 790, \"monthRank\": \"564d820bc319238a644fb408\", \"totalRank\": \"564d8494fe996c25652644d2\", \"created\": \"2017-04-01T03:20:20.988Z\", \"isSub\": false, \"collapse\": false, \"new\": true, \"gender\": \"male\", \"priority\": 250, \"books\": [ &#123; \"_id\": \"51d11e782de6405c45000068\", \"author\": \"天蚕土豆\", \"cover\": \"/agent/http://image.cmfu.com/books/2750457/2750457.jpg\", \"shortIntro\": \"大千世界，位面交汇，万族林立，群雄荟萃，一位位来自下位面的天之至尊，在这无尽世界，演绎着令人向往的传奇，追求着那主宰之路。 无尽火域，炎帝执掌，万火焚苍穹。 武...\", \"title\": \"大主宰\", \"site\": \"zhuishuvip\", \"cat\": \"玄幻\", \"banned\": 0, \"latelyFollower\": 359456, \"retentionRatio\": \"45.31\" &#125; ] ... ok: true &#125; 书评讨论url: http://api.zhuishushenqi.com/post/by-book?&amp;start=21&amp;limit=20 request:1234567query strings: &#123; book: &#123;bookId&#125;, sort: (updated|created|comment-count) // 排序方式 type: (normal,vote) // 未知 start, limit&#125; response: 12345678910111213141516171819202122232425&#123; &quot;posts&quot;: [&#123; &quot;_id&quot;: &quot;59b25a1ca17d25ad324e208d&quot;, &quot;author&quot;: &#123; &quot;_id&quot;: &quot;54ef4d94704d6be45528af89&quot;, &quot;avatar&quot;: &quot;/avatar/34/bb/34bbc2992b34e6a042a83be1f6f3b735&quot;, //http://statics.zhuishushenqi.com &quot;nickname&quot;: &quot;追书家的小萝莉&quot;, &quot;activityAvatar&quot;: &quot;/activities/20170120/1.jpg&quot;, &quot;type&quot;: &quot;official&quot;, &quot;lv&quot;: 9, &quot;gender&quot;: &quot;female&quot; &#125;, &quot;type&quot;: &quot;vote&quot;, &quot;likeCount&quot;: 371, &quot;block&quot;: &quot;ramble&quot;, &quot;haveImage&quot;: true, &quot;state&quot;: &quot;normal&quot;, &quot;updated&quot;: &quot;2017-09-16T05:38:16.092Z&quot;, &quot;created&quot;: &quot;2017-09-08T08:51:40.345Z&quot;, &quot;commentCount&quot;: 5309, &quot;voteCount&quot;: 3980, &quot;title&quot;: &quot;【真够刺激】答题拿红包！邀请好友满30元就能提现！★攻略真的不先看下么！&quot; &#125;], &quot;ok&quot;: true&#125; 短评url: http://api.zhuishushenqi.com/post/short-review/by-book request:123456query strings: &#123; book: &#123;bookId&#125;, sortType: (lastUpdated|newest|mostlike) //排序方式 start, limit&#125; response:12345678910111213141516171819202122232425262728293031&#123; &quot;docs&quot;: [ &#123; &quot;_id&quot;: &quot;596affc7fe0ad34f1b8317e3&quot;, &quot;rating&quot;: 3, &quot;type&quot;: &quot;short_review&quot;, &quot;author&quot;: &#123; &quot;_id&quot;: &quot;596ac9b85d0fe1b460155952&quot;, &quot;avatar&quot;: &quot;/avatar/bd/bf/bdbf666388552ebb3166473e3f689dfd&quot;, &quot;nickname&quot;: &quot;素心&quot;, &quot;activityAvatar&quot;: &quot;&quot;, &quot;type&quot;: &quot;normal&quot;, &quot;lv&quot;: 4, &quot;gender&quot;: &quot;female&quot; &#125;, &quot;book&quot;: &#123; &quot;_id&quot;: &quot;51060c88bb1c67cf28000035&quot;, &quot;cover&quot;: &quot;/agent/http%3A%2F%2Fimg.1391.com%2Fapi%2Fv1%2Fbookcenter%2Fcover%2F1%2F23766%2F_23766_549079.jpg%2F&quot;, &quot;title&quot;: &quot;真灵九变&quot; &#125;, &quot;likeCount&quot;: 2, &quot;priority&quot;: 0.497, &quot;block&quot;: &quot;short_review&quot;, &quot;state&quot;: &quot;normal&quot;, &quot;updated&quot;: &quot;2017-08-06T09:58:26.733Z&quot;, &quot;created&quot;: &quot;2017-07-16T05:55:19.277Z&quot;, &quot;content&quot;: &quot;就是结尾有点烂尾了&quot; &#125; ], &quot;ok&quot;: true&#125; 长评url: http://api.zhuishushenqi.com/post/review/by-book?book=51060c88bb1c67cf28000035&amp;sort=updated&amp;start=0&amp;limit=20 request:123456query strings: &#123; book: &#123;bookId&#125;, sort: (updated|created|comment-count), start, limit&#125; response:1234567891011121314151617181920212223242526272829&#123; &quot;total&quot;: 35, &quot;reviews&quot;: [&#123; &quot;_id&quot;: &quot;584201194fe8537c0f7fdf32&quot;, &quot;rating&quot;: 1, &quot;author&quot;: &#123; &quot;_id&quot;: &quot;580cc42178afb3190f41f5ae&quot;, &quot;avatar&quot;: &quot;/avatar/b3/70/b370b0054ae878829bfae3fe8ceacf3e&quot;, &quot;nickname&quot;: &quot;……&quot;, &quot;activityAvatar&quot;: &quot;/activities/20170120/4.jpg&quot;, &quot;type&quot;: &quot;normal&quot;, &quot;lv&quot;: 8, &quot;gender&quot;: &quot;male&quot; &#125;, &quot;helpful&quot;: &#123; &quot;total&quot;: 35, &quot;yes&quot;: 117, &quot;no&quot;: 82 &#125;, &quot;likeCount&quot;: 5, &quot;state&quot;: &quot;normal&quot;, &quot;updated&quot;: &quot;2017-09-13T15:08:48.577Z&quot;, &quot;created&quot;: &quot;2016-12-02T23:17:45.711Z&quot;, &quot;commentCount&quot;: 76, &quot;content&quot;: &quot;1）一边声明“猪脚资质一般”，一边又在没有“穿越神器”的情况下给猪脚开挂。修炼速度莫名其妙就比其他人快，这也是“资质一般”？能自圆其说不？\\n\\n2）明明是凡人流里那种勾心斗角杀人夺宝的世界，猪脚的朋友未免太多了吧？还各个都为猪脚着想，围着猪脚转？凡人流啊！那是神马鸡毛世界，那是人人都可能在你身后打闷棍的世界。想玩哥们弟兄义气江湖的，请出门左手见《飘渺之旅》下车。\\n\\n3）“俏皮、傲娇”的女主！我拉个擦，这个基本是所有YY书的鹤顶红了，本以为绝迹几千年，没想到还能见！\\n\\n4）师姐，不是1个，是10个！我进错门了吗？这是许仙传吗？真是许仙传就好了！这分明是睡裤外穿、浓妆艳抹的乡下小保姆嘛！\\n\\n5）美少妇师傅！你到底想写啥？玩后宫，人妻的请出门右转进晋江。\\n\\n6）N个陷害猪脚，差点让猪脚死球的同门，猪脚被坑了一次又一次，从来不报复，从来不想解决，于是被人从头坑到尾。请问，你是白求恩还是科利华？还是传说中的圣雄甘地？\\n\\n7）猪脚开挂升级也就罢了，猪脚的朋友们也是哥哥开挂。一开始书中声称“升溶血修士如何如何难，升锻蛋修士更是千中无一”，好，猪脚开挂，奇遇不断，十几年升到锻蛋！贫道以为这已经是牛逼透顶的了，结果再看，猪脚的朋友们也一个个都锻蛋了！这尼玛也是“如何如何难”？“千中无一”？？拜托你学凡人流，看过凡人没有？？？更恶心的是，就连猪脚随便找得几个土匪小弟，也一个个吃猪尿泡一样升锻蛋了。我。。。。叉。。。。&quot;, &quot;title&quot;: &quot;个人观点，看书前最好看看！&quot; &#125;], &quot;ok&quot;: true&#125; 书单列表url: http://api.zhuishushenqi.com/book-list request: 12345678910111213query string: &#123; sort: (collectorCount|created), duration: (last-seven-days|all), gender: (male|female), tag: (有点多), start&#125;说明:本周最热的query是: sort=collectorCount&amp;duration=last-seven-days&amp;start=0最新发布是: sort=created&amp;duration=all最多收藏是: sort=collectorCount&amp;duration=all response:12345678910111213141516&#123; &quot;total&quot;: 241518, &quot;bookLists&quot;: [ &#123; &quot;_id&quot;: &quot;57331505025ffaa06cb28852&quot;, &quot;title&quot;: &quot;★星光书局 ★(04－20更&quot;, &quot;author&quot;: &quot;人闲&quot;, &quot;desc&quot;: &quot;☆准星（不好看），★一星，★★二星，★★★三星，★★★★，★★★★★五星 （持续更新中……）……………本期歌单:周慧敏《自作多情》、赵雷《已是两条路上的人》、张韶涵《寓言》、张惠妹《我最亲爱的》、张惠妹《哭砂》、张惠妹《剪爱》、张碧晨《渡红尘》、Amy Winehouse《You know I&apos;m no good》、邓紫棋《偶尔》、邓紫棋《喜欢你》、叶倩文《曾经心疼》、叶倩文《祝福》&quot;, &quot;gender&quot;: &quot;male&quot;, &quot;collectorCount&quot;: 96298, &quot;cover&quot;: &quot;/agent/http%3A%2F%2Fimg.1391.com%2Fapi%2Fv1%2Fbookcenter%2Fcover%2F1%2F41678%2F_41678_412098.jpg%2F&quot;, &quot;bookCount&quot;: 464 &#125; ], &quot;ok&quot;: true&#125; 详情url: http://api.zhuishushenqi.com/book-list/:bookId request: 123url params: &#123; bookId: &#123;bookId&#125;&#125; response:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&#123; &quot;bookList&quot;: &#123; &quot;_id&quot;: &quot;57331505025ffaa06cb28852&quot;, &quot;updated&quot;: &quot;2017-05-25T03:18:20.437Z&quot;, &quot;title&quot;: &quot;★星光书局 ★(04－20更&quot;, &quot;author&quot;: &#123; &quot;_id&quot;: &quot;568dcb55f08722bf2bdeeb38&quot;, &quot;avatar&quot;: &quot;/avatar/41/32/41327b6d253592bb644fa4dd4c5c9b03&quot;, &quot;nickname&quot;: &quot;人闲&quot;, &quot;type&quot;: &quot;normal&quot;, &quot;lv&quot;: 9 &#125;, &quot;desc&quot;: &quot;☆准星（不好看），★一星，★★二星，★★★三星，★★★★，★★★★★五星 （持续更新中……）……………本期歌单:周慧敏《自作多情》、赵雷《已是两条路上的人》、张韶涵《寓言》、张惠妹《我最亲爱的》、张惠妹《哭砂》、张惠妹《剪爱》、张碧晨《渡红尘》、Amy Winehouse《You know I&apos;m no good》、邓紫棋《偶尔》、邓紫棋《喜欢你》、叶倩文《曾经心疼》、叶倩文《祝福》&quot;, &quot;gender&quot;: &quot;male&quot;, &quot;created&quot;: &quot;2016-05-11T11:18:29.278Z&quot;, &quot;tags&quot;: [ &quot;热血&quot;, &quot;都市&quot;, &quot;现代&quot; ], &quot;stickStopTime&quot;: null, &quot;isDraft&quot;: false, &quot;isDistillate&quot;: false, &quot;collectorCount&quot;: 96299, &quot;books&quot;: [ &#123; &quot;book&quot;: &#123; &quot;cat&quot;: &quot;东方玄幻&quot;, &quot;_id&quot;: &quot;579eaef492253c435235dbea&quot;, &quot;title&quot;: &quot;斗战狂潮&quot;, &quot;author&quot;: &quot;骷髅精灵&quot;, &quot;longIntro&quot;: &quot;双月当空，无限可能的英魂世界孤寂黑暗，神秘古怪的嬉命小丑百城联邦，三大帝国，异族横行，魂兽霸幽这是一个英雄辈出的年代，人类卧薪尝胆重掌地球主权，孕育着进军高纬度的野望！重点是……二年级的废柴学长王同学，如何使用嬉命轮盘，撬动整个世界，学妹们，请注意，学长来了！！！斗战一群：21222419（两千人战力群）骷髅的微信公共号：kuloujingling00新浪微博：骷髅精灵&quot;, &quot;cover&quot;: &quot;/agent/http%3A%2F%2Fimg.1391.com%2Fapi%2Fv1%2Fbookcenter%2Fcover%2F1%2F1286280%2F_1286280_696459.jpg%2F&quot;, &quot;site&quot;: &quot;zhuishuvip&quot;, &quot;majorCate&quot;: &quot;玄幻&quot;, &quot;minorCate&quot;: &quot;东方玄幻&quot;, &quot;banned&quot;: 0, &quot;latelyFollower&quot;: 26038, &quot;wordCount&quot;: 1962241, &quot;retentionRatio&quot;: 60.36 &#125;, &quot;comment&quot;: &quot;★★二星…………&quot; &#125; ], &quot;shareLink&quot;: &quot;http://share.zhuishushenqi.com/booklist/57331505025ffaa06cb28852&quot;, &quot;id&quot;: &quot;57331505025ffaa06cb28852&quot;, &quot;total&quot;: 464 &#125;, &quot;ok&quot;: true&#125; 获取最新章节url: http://api.zhuishushenqi.com/book request: 1234url params: &#123; view: &apos;updated&apos;, id: &apos;id=5afa99a6e1a9635af90fc802,55eef8b27445ad27755670b9&apos; // bookId 多个使用,隔开&#125; response:1234567891011121314151617181920[ &#123; \"_id\": \"5afa99a6e1a9635af90fc802\", \"author\": \"上山打老虎额\", \"allowMonthly\": false, \"referenceSource\": \"default\", \"updated\": \"2019-02-22T15:33:39.695Z\", \"chaptersCount\": 1135, \"lastChapter\": \"正文卷 第一千零七十三章：圣天子也\" &#125;, &#123; \"_id\": \"55eef8b27445ad27755670b9\", \"author\": \"圣骑士的传说\", \"allowMonthly\": false, \"referenceSource\": \"default\", \"updated\": \"2019-02-22T16:02:40.095Z\", \"chaptersCount\": 2529, \"lastChapter\": \"第2521章 角度就是这么刁钻\" &#125;]","categories":[{"name":"API","slug":"API","permalink":"http://http://www.aferica.wang/categories/API/"}],"tags":[{"name":"API","slug":"API","permalink":"http://http://www.aferica.wang/tags/API/"},{"name":"追书神器","slug":"追书神器","permalink":"http://http://www.aferica.wang/tags/追书神器/"}]}]}